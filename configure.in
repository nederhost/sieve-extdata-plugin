AC_INIT([Pigeonhole Sieve Extdata plugin], [0.1.0], [dovecot@dovecot.org], [pigeonhole-sieve-extdata])
AC_CONFIG_SRCDIR([src])

AM_INIT_AUTOMAKE([no-define foreign])

# Autoheader is not needed and does more harm than good for this package. However, it is 
# tightly integrated in autoconf/automake and therefore it is difficult not to use it. As 
# a workaround we give autoheader a dummy config header to chew on and we handle the 
# real config header ourselves.
AC_CONFIG_HEADERS([dummy-config.h sieve-extdata-config.h])

AC_DEFINE_UNQUOTED(SIEVE_EXTDATA_NAME, "$PACKAGE_NAME", 
	[Define to the full name of this plugin implementation.])
AC_DEFINE_UNQUOTED(SIEVE_EXTDATA_VERSION, "$PACKAGE_VERSION", 
	[Define to the version of this plugin implementation.])

AM_MAINTAINER_MODE

AC_PROG_LIBTOOL

AC_ARG_WITH(dovecot,
[  --with-dovecot[=DIR]    Dovecot base directory (../)],
	dovecotdir="$withval",
	dovecotdir=../dovecot-1.2
)

AC_ARG_WITH(pigeonhole,
[  --with-pigeonhole[=DIR]    Pigeonhole base directory (../)],
	pigeonholedir="$withval",
	pigeonholedir=../dovecot-1.2-sieve
)

top=`pwd`
cd $dovecotdir
dovecotdir=`pwd`
cd $top
cd $pigeonholedir
pigeonholedir=`pwd`
cd $top
AC_SUBST(dovecotdir)
AC_SUBST(pigeonholedir)

if ! test -f "$dovecotdir/dovecot-config"; then
  echo
  echo "dovecot-config not found from $dovecotdir, use --with-dovecot=PATH"
  echo "to give path to compiled Dovecot sources or to a directory with the"
  echo "installed dovecot-config file."
  AC_MSG_ERROR([dovecot-config not found])
fi

if test -d "$dovecotdir/src"; then
  # compiling against sources
  have_dovecot_sources=yes
else
  # compiling against installed headers
  have_dovecot_sources=no
fi
AM_CONDITIONAL(HAVE_DOVECOT_SOURCES, test "$have_dovecot_sources" = "yes")

dnl replace relative ../ paths in the file with full paths
eval `cat $dovecotdir/dovecot-config|sed 's,\$(top_builddir)/,$dovecotdir/,g'`

if test $have_dovecot_sources = yes; then
  dovecot_incdir="$dovecotdir"

  LIBDOVECOT_INCLUDE='-I$(dovecot_incdir) -I$(dovecot_incdir)/src/lib -I$(dovecot_incdir)/src/lib-dict -I$(dovecot_incdir)/src/lib-storage -I$(dovecot_incdir)/src/lib-mail'
else
  LIBDOVECOT_INCLUDE='-I$(dovecot_incdir)'
fi

sieve_testsuite=""
if test -f "$pigeonholedir/src/lib-sieve/sieve.h"; then
  sieve_incdir="$pigeonholedir/src/lib-sieve"
  sieve_variables_incdir="$pigeonholedir/src/lib-sieve/plugins/variables"
  if test -f "$pigeonholedir/src/testsuite/testsuite"; then
    sieve_testsuite="$pigeonholedir/src/testsuite/testsuite"
  fi
elif (test -f "$pigeonholedir/sieve.h") && (test -f "$pigeonholedir/sieve-ext-variables.h"); then
  sieve_incdir="$pigeonholedir"
  sieve_variables_incdir="$pigeonholedir"
elif (test $have_dovecot_libs = no) && (test -f "$dovecot_incdir/sieve/sieve.h"); then
  sieve_incdir="$dovecot_incdir/sieve"
  sieve_variables_incdir="$dovecot_incdir/sieve"
  pigeonholedir="$dovecot_incdir/sieve"
else
  echo
  echo "Pigeonhole Sieve headers not found from $pigeonholedir and "
  echo "they are not installed in the Dovecot include path, use "
  echo "--with-pigeonhole=PATH to give path to Pigeonhole sources "
  echo "or installed headers."
  AC_MSG_ERROR([pigeonhole not found])
fi
AM_CONDITIONAL(HAVE_TESTSUITE, ! test -z "$sieve_testsuite")

pigeonhole_incdir="$pigeonholedir"

AC_SUBST(STORAGE_LIBS)
AC_SUBST(LIBICONV)
AC_SUBST(RAND_LIBS)
AC_SUBST(MODULE_LIBS)
AC_SUBST(dovecot_incdir)
AC_SUBST(moduledir)
AC_SUBST(pigeonhole_incdir)
AC_SUBST(sieve_incdir)
AC_SUBST(sieve_variables_incdir)
AC_SUBST(sieve_testsuite)

AC_SUBST(LIBDOVECOT_INCLUDE)
AC_SUBST(LIBDOVECOT_STORAGE_INCLUDE)

AC_CONFIG_FILES([
Makefile
src/Makefile
stamp.h])

AC_OUTPUT
